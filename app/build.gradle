apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.ralphlirio.itunes"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Dagger
    def daggerVersion = "2.27"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


    //Glide
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    kapt "android.arch.lifecycle:compiler:1.1.1"
    implementation 'com.github.bumptech.glide:glide:4.11.0'


    //LiveData MVVM
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // alternatively - just ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    // For Kotlin use lifecycle-viewmodel-ktx
    // alternatively - just LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata:2.2.0'
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'

    //RX
    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation("io.reactivex.rxjava2:rxkotlin:2.4.0")
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.8.1'

    //Convert Observable to LiveData
    implementation 'android.arch.lifecycle:reactivestreams:1.1.1'

    //Material design
    implementation 'com.google.android.material:material:1.2.0-alpha06'

    // androidx.fragment
    def fragment_version = "1.2.4" // must use for new factory stuff
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.fragment:fragment:$fragment_version"

}
